<?xml version="1.0" encoding="UTF-8"?>
<ns:hibernate xmlns:ns="http://www.sldt.mds.com/xml/ns/j2ee/hibernate"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xsi:schemaLocation="http://www.sldt.mds.com/xml/ns/j2ee/hibernate LTHibernateSchema.xsd">
	<statement id="getPrivlgByCateAndName">
		from TSmPriv where privName = #privname# and cateId=#cateid#
	</statement>
	<statement id="getPrivlgByParentAndName">
		from TSmPriv where privName = #privname# and pPrivId=#parentpriv#
	</statement>
	<statement id="listUser">
		from TSmUser u where 1=1
		<dynamic-field property="userId">
			and u.userId like #userId#
		</dynamic-field>
		<dynamic-field property="name">
			and u.name like '%$name$%'
		</dynamic-field>
		<dynamic-field property="orgId">
			and u.orgId in ($orgId$)
		</dynamic-field>
	</statement>
	
	<statement id="listAllSmUser">
		select user_id,org_id,name,user_stat,cont_tel,cont_email from t_sm_user
	</statement>
	
	<statement id = "listSystem">
	   select APP_ID,APP_NAME,APP_DESCRIBE from t_sm_system 
	</statement>
	
	<statement id="findUserByUserId">
		from TSmUser u where 1=1 
		<dynamic-field property="userId">
		and userId = #userId#
		</dynamic-field>
	</statement>
	
	<statement id="findMenuListByUserId">
	select * from T_SM_MENU m where m.APP_ID=#appId# and  m.menu_id in(select menu_id from T_SM_MENU_PRIV_CFG where priv_id in(select priv_id from T_SM_USER_PRIV_RT where user_Id = #userId# ))
	</statement>
	
	<statement id="findBtnListByUserId">
	select * from T_SM_BTN m where m.MENU_ID in(select MENU_ID from T_SM_MENU  where APP_ID=#appId#) and m.BTN_ID in(select BTN_ID from T_SM_BTN_PRIV_CFG where priv_id in(select priv_id from T_SM_USER_PRIV_RT where user_Id = #userId#))
	</statement>
	
	<statement id="findMenuListALll">
	select * from T_SM_MENU m 
	</statement>
	
	<statement id="findBtnListAll">
	select * from T_SM_BTN m 
	</statement>
	
	<statement id="listRole">
		select * from T_SM_ROLE
	</statement>
	
	<statement id="listHqRole">
		from TSmRole 
	</statement>
	
	<statement id="deleteCfgRoleByUserId">
		delete from TSmUserRoleCfg ur where 1=1
		<dynamic-field property="userId">
			and ur.userId = #userId#
		</dynamic-field>
	</statement>
	
	<statement id="deleteCfgPrivByUserId">
		delete from TSmUserPrivCfg up where 1=1
		<dynamic-field property="userId">
			and up.userId = #userId#
		</dynamic-field>
	</statement>
	
	<statement id="deleteUserPriv">
		delete from TSmUserPrivCfg up where 1=1 and up.userId = #userId# and up.privilegeId = #privId#
	</statement>
	
	<statement id="listHqMenu">
		SELECT 
			t.MENU_ID,
			t.MENU_NAME,
			t.MENU_DESC,
			t.MENU_LEVEL,
			t.MENU_TYPE,
			t.MENU_URL,
			t.MENU_ORDER,
			t.MENU_ICON,
			t.P_MENU_ID,
			t.APP_ID,
			t.MENU_PARAM2,
			t.MENU_PARAM3,
			p.MENU_NAME AS P_MENU_NAME,
            s.APP_NAME
		FROM t_sm_menu t
		LEFT JOIN t_sm_menu p ON t.P_MENU_ID = p.MENU_ID 
		LEFT JOIN t_sm_system s on s.APP_ID = t.APP_ID
		WHERE 1=1
		<dynamic-field property="menuName">
			and UPPER(t.MENU_NAME) LIKE #menuName#
		</dynamic-field>
		<dynamic-field property="menuType">
			and t.MENU_TYPE = #menuType#
		</dynamic-field>  
		<dynamic-field property="pMenuName">
			and UPPER(p.MENU_NAME) LIKE #pMenuName#
		</dynamic-field>
		<dynamic-field property="appId">
			and t.APP_ID = #appId#
		</dynamic-field> 
	</statement>
	
	<statement id="listMenu">
		select * from t_sm_menu
	</statement>
	
	<statement id="listPriv">
		select t.priv_id,t.priv_name,t.priv_desc,t.memo,t.priv_type,t.cate_id,t.p_priv_id,t.create_dt,t.priv_stat from t_sm_priv t where 1=1 
		<dynamic-field property="cateid">
			and t.cate_id = #cateid#
		</dynamic-field>
		<dynamic-field property="privname">
			and t.priv_name like #privname#
		</dynamic-field>
		<dynamic-field property="privstat">
			and t.priv_stat = #privstat#
		</dynamic-field>
	</statement>
	
	<statement id="listPrivCate">
		from TSmPrivCate
	</statement>
	
	<statement id="listPrivCateByPage">
		from TSmPrivCate t where 1=1
		<dynamic-field property="privCateName">
			and t.privCateName like #privCateName#
		</dynamic-field>
	</statement>
	
	<statement id="hasCfgUserPrivlg">
		from TSmUserPrivCfg up where 1=1
		<dynamic-field property="userId">
			and up.userId = #userId#
		</dynamic-field>
		<dynamic-field property="privlgId">
			and up.privilegeId = #privlgId#
		</dynamic-field>
	</statement>
	
	<statement id="hasCfgUserRole">
		from TSmUserRoleCfg ur where 1=1
		<dynamic-field property="userId">
			and ur.userId = #userId#
		</dynamic-field>
		<dynamic-field property="roleId">
			and ur.roleId = #roleId#
		</dynamic-field>
	</statement>
	
    <statement id="listPagePriv">
		from TSmPriv t where 1=1
	</statement>
	
	<statement id="listBtn">
		from TSmBtn as b where 1=1
		<dynamic-field property="btnText">
			and b.btnText like #btnText#
		</dynamic-field>
		<dynamic-field property="menuId">
			and b.menuId = #menuId#
		</dynamic-field>
	</statement>
	
	<statement id="findRootOrgs">
		from TSmOrgInfo as t where t.orgId = t.pOrgId or t.pOrgId is null or t.pOrgId = ''
	</statement>
	
	<statement id="findChildOrgsByParentId">
		from TSmOrgInfo as t where 1=1
		<dynamic-field property="orgId">
			and t.pOrgId = #orgId#
		</dynamic-field>
		<dynamic-field property="orgId"> 
		   <![CDATA[
		   and  t.orgId <> #orgId#
		   ]]>
		</dynamic-field> 
		
	</statement>
	
	<statement id="getOrgInfos">
		from TSmOrgInfo as t where 1=1
		<dynamic-field property="orgId">
			and t.orgId = #orgId#
		</dynamic-field>
		<dynamic-field property="pOrgId">
			or t.pOrgId = #pOrgId#
		</dynamic-field>
	</statement>
	
	<statement id="hasCfgUserOrg">
		from TSmUserOrgCfg uo where 1=1
		<dynamic-field property="userId">
			and uo.userId = #userId#
		</dynamic-field>
		<dynamic-field property="orgId">
			and uo.orgId = #orgId#
		</dynamic-field>
	</statement>
	
	<statement id="deleteCfgPrivByMenuId">
		delete from TSmMenuPrivCfg mp where 1=1
		<dynamic-field property="menuId">
			and mp.menuId = #menuId#
		</dynamic-field>
	</statement>
	
	<statement id="deleteCfgPrivByBtnId">
		delete from TSmBtnPrivCfg bp where 1=1
		<dynamic-field property="btnId">
			and bp.btnId = #btnId#
		</dynamic-field>
	</statement>
	
	<statement id="findRootMenus">
		from TSmMenu as t where t.menuId = t.pMenuId or t.pMenuId is null or t.pMenuId = ''
	</statement>
	
	<statement id="findChildMenusByParentId">
		from TSmMenu as t where 1=1
		<dynamic-field property="menuId">
			and t.pMenuId = #menuId#
		</dynamic-field>
	</statement>
	
	<statement id="findChildMenusByParentIdSql">
		select * from t_sm_menu as t where 1=1
	   <dynamic-field property="menuLevel">
			and t.menu_level = #menuLevel#
		</dynamic-field>
		<dynamic-field property="menuId">
			and t.p_menu_id = #menuId#
		</dynamic-field>
		<dynamic-field property="sysId">
			and t.app_id = #sysId#
		</dynamic-field>
		<dynamic-field property="userId">
			and t.menu_id in(select c.menu_id from T_SM_MENU_PRIV_CFG c,t_sm_user_priv_rt r where c.priv_id=r.priv_id and r.user_id=#userId#) 
		</dynamic-field>
		order by t.menu_order 
	</statement>
	
	<statement id="hasCfgBtnPrivlg">
		from TSmBtnPrivCfg bp where 1=1
		<dynamic-field property="btnId">
			and bp.btnId = #btnId#
		</dynamic-field>
		<dynamic-field property="privId">
			and bp.privId = #privId#
		</dynamic-field>
	</statement>
	
	<statement id="hasCfgMenuPrivlg">
		from TSmMenuPrivCfg mp where 1=1
		<dynamic-field property="menuId">
			and mp.menuId = #menuId#
		</dynamic-field>
		<dynamic-field property="privId">
			and mp.privId = #privId#
		</dynamic-field>
	</statement>
	
	<statement id="findRolePrivIdByUserId">
	select a.* from t_sm_role_priv_cfg a RIGHT JOIN(select MAX(id) id from t_sm_role_priv_cfg GROUP BY PRIV_ID) b on b.id = a.id where a.ROLE_ID IN(select role_id from t_sm_user_role_cfg where user_id=#userId#)
	</statement>
	<statement id="findUserPrivIdByUserId">
	select * from t_sm_user_priv_cfg where USER_ID = #userId#
	</statement>
	<statement id="findRolePrivIdByRoleIds">
	select a.* from t_sm_role_priv_cfg a RIGHT JOIN(select MAX(id) id from t_sm_role_priv_cfg GROUP BY PRIV_ID) b on b.id = a.id where a.ROLE_ID in(#roleIds#)
	</statement>
	
	<statement id="delUserPrivRtByUserId">
		delete from TSmUserPrivRt upr where 1=1
		<dynamic-field property="userId">
			and upr.userId = #userId#
		</dynamic-field>
	</statement>
	
	<statement id="findAllRolePriv">
	    select r.USER_ID,p.ID,p.ROLE_ID,p.PRIV_ID,p.PRIV_TYPE from t_sm_user_role_cfg r,t_sm_role_priv_cfg p where r.ROLE_ID = p.ROLE_ID
	<dynamic-field property="userId">
			and r.USER_ID = #userId#
	</dynamic-field>
	<dynamic-field property="roleId">
			and r.ROLE_ID = #roleId#
	</dynamic-field>
	</statement>
	
	<statement id="findAllUserPriv">
	SELECT * FROM t_sm_user_priv_cfg
	</statement>
	<statement id="delAllUserPrivRt">
	DELETE FROM t_sm_user_priv_rt
	</statement>
	
	
	<statement id="isHasMenuPriv">
	select * from t_sm_menu_priv_cfg  where MENU_ID in(#menuIds#)
	</statement>
	
	<statement id="isHasBtnPriv">
	select * from t_sm_btn_priv_cfg b where b.BTN_ID in(#btnIds#)
	</statement>
	
	<statement id="isHasBtnPrivCfg">
	select * from t_sm_btn_priv_cfg b where b.PRIV_ID in(#privIds#)
	</statement>
	<statement id="isHasMenuPrivCfg">
	select * from t_sm_menu_priv_cfg m where m.PRIV_ID in(#privIds#)
	</statement>
	<statement id="isHasRolePrivCfg">
	select * from t_sm_role_priv_cfg r where r.PRIV_ID in(#privIds#)
	</statement>
	<statement id="isHasUserPrivCfg">
	select * from t_sm_user_priv_cfg u where u.PRIV_ID in(#privIds#)
	</statement>
	
	<statement id="isHasUserRoleCfg">
	select * from t_sm_user_role_cfg r where r.ROLE_ID in ($roleIds$)
	</statement>
	<statement id="isHasRolePriv">
	select * from t_sm_role_priv_cfg r where r.ROLE_ID in ($roleIds$)
	</statement>
	
	<statement id="isHasUserRole">
	select * from t_sm_user_role_cfg r where r.USER_ID in(#userIds#)
	</statement>
	<statement id="isHasUserPriv">
	select * from t_sm_user_priv_cfg u where u.USER_ID in(#userIds#)
	</statement>
	
	<statement id="findBtnInfoByMenuId">
	    select * from T_SM_BTN t where 1=1
	   <dynamic-field property="menuId">
			and t.MENU_ID = #menuId#
	   </dynamic-field>
	   <dynamic-field property="userId">
			and t.BTN_ID in(select c.BTN_ID from T_SM_BTN_PRIVLG_CFG c,t_sm_user_priv_rt r where c.priv_id=r.priv_id and r.user_id=#userId#) 
	   </dynamic-field>
	</statement>
	
	<statement id="listOrg">
		from TSmOrgInfo o where 1=1
		<dynamic-field property="orgId">
			and UPPER(o.orgId) like UPPER(concat('%',#orgId#,'%'))
		</dynamic-field>
		<dynamic-field property="orgName">
			and UPPER(o.orgName) like UPPER(concat('%',#orgName#,'%'))
		</dynamic-field>
	</statement>
	
	<statement id="sm_getMetaPrivCfg">
		select * from T_SM_META_PRIV_CFG c where 1=1
		<dynamic-field property="userId">
		   and c.USER_ID = #userId#
		</dynamic-field>
		<dynamic-field property="roleId">
		   and c.ROLE_ID = #roleId#
		</dynamic-field>
		<dynamic-field property="instId">
		   and c.INST_ID = #instId#
		</dynamic-field>
	</statement>
	
	<statement id="sm_delMetaPrivs">
		delete  from T_SM_META_PRIV_CFG where 1=1
		<dynamic-field property="userId">
		   and USER_ID = #userId#
		</dynamic-field>
		<dynamic-field property="roleId">
		   and ROLE_ID = #roleId#
		</dynamic-field>
		<dynamic-field property="instId">
		   and INST_ID = #instId#
		</dynamic-field>
	</statement>
	
	<statement id="sm_delUserMetaPrivCfgs">
		delete  from T_SM_USER_PRIV_CFG where PRIV_TYPE=3
		<dynamic-field property="userId">
		   and USER_ID = #userId#
		</dynamic-field>
		<dynamic-field property="instId">
		   and PRIV_ID like UPPER(concat(#instId#,'%'))
		</dynamic-field>
	</statement>
	
	<statement id="sm_delRoleMetaPrivCfgs">
		delete  from T_SM_ROLE_PRIV_CFG where PRIV_TYPE=3
		<dynamic-field property="roleId">
		   and ROLE_ID = #roleId#
		</dynamic-field>
		<dynamic-field property="instId">
		   and PRIV_ID like UPPER(concat(#instId#,'%'))
		</dynamic-field>
	</statement>
	
	<statement id="sm_findPrivByAppIdAndUserId">
		select rt.PRIV_ID from T_SM_USER_PRIV_RT rt where 1=1
		<dynamic-field property="userId">
		   and rt.USER_ID = #userId#
		</dynamic-field>
	</statement>
	
	<statement id="sm_findAllPriv">
		select PRIV_ID from T_SM_PRIV where 1=1
	</statement>
	<statement id="getPrivCateByName">
		from TSmPrivCate where privCateName = #privCateName#
	</statement>
	<!-- 查询子权限编号 -->
 	 <statement id="getChildrenPrivIdBySql">
       			 SELECT CONCAT("\'",REPLACE(getChildrenPrivId(#pprivId#),",","\',\'"),"\'") AS PRIVID
    </statement>
	<!-- 插入数据到角色权限表，若插入的权限为空（privIds）则插入0条数据 -->
    <statement id="insertRolePrivCfg">
    	INSERT INTO t_sm_role_priv_cfg(ID,ROLE_ID,PRIV_ID,PRIV_TYPE)
			SELECT SUBSTR(REPLACE(UUID(),'-','') FROM 1 FOR 32) AS ID,
			'$roleId$' AS ROLE_ID,p.PRIV_ID,p.PRIV_TYPE
		FROM t_sm_priv p 
		WHERE 1=2 
		<dynamic-field property="privIds">
			OR p.priv_id in ($privIds$)
		</dynamic-field>
    </statement>
    <!-- 根据多个用户id删除实时运行表 -->
      <statement id="delUserPrivRtByUserIds">
    	DELETE r FROM t_sm_user_priv_rt r where 1=2
		<dynamic-field property="userIds">
			OR r.USER_ID in ($userIds$)
		</dynamic-field>
    </statement>
       <!-- 通过配置角色权限更新实时运行表 -->
      <statement id="insertTSmUserPrivRt">
    	INSERT INTO t_sm_user_priv_rt(ID,PRIV_ID,USER_ID,PRIV_TYPE)
		SELECT SUBSTR(REPLACE(UUID(),'-','') FROM 1 FOR 32) AS ID,r.PRIV_ID,r.USER_ID,r.PRIV_TYPE FROM(
				select up.USER_ID,up.PRIV_ID,up.PRIV_TYPE from t_sm_user_priv_cfg up where 1=1 
				<dynamic-field property="userIds">
					AND USER_ID in ($userIds$)
				</dynamic-field>
				UNION
				SELECT ur.USER_ID,rp.PRIV_ID,rp.PRIV_TYPE FROM t_sm_user_role_cfg ur,t_sm_role_priv_cfg rp WHERE ur.ROLE_ID=rp.ROLE_ID 
				<dynamic-field property="userIds">
					AND ur.USER_ID in($userIds$) 
				</dynamic-field>
				<dynamic-field property="roleIds">
					AND rp.ROLE_ID  in ($roleIds$)
				</dynamic-field>
		) r
    </statement>
    <!-- 插入到用户权限配置表中，若插入的权限为空（privIds）则插入0条数据 -->
    <statement id="insertUserPrivCfg">
    INSERT INTO t_sm_user_priv_cfg(ID,USER_ID,PRIV_ID,PRIV_TYPE)
		SELECT SUBSTR(REPLACE(UUID(),'-','') FROM 1 FOR 32) AS ID,
			'$userId$' AS USER_ID,
			p.PRIV_ID,
			p.PRIV_TYPE
		FROM t_sm_priv p WHERE 1=2
		<dynamic-field property="privIds">
			OR p.priv_id in ($privIds$)
		</dynamic-field>
    </statement>
    <!-- 根据用户编号查询用户角色配置 -->
    <statement id="getUserRoleCfgByUserId">
    	SELECT t.ID,t.ROLE_ID,t.USER_ID FROM t_sm_user_role_cfg t WHERE t.USER_ID=#userId#
    </statement>
    <!-- 插入用户角色配置信息 -->
    <statement id="insertUserRoleCfg">
    	INSERT INTO t_sm_user_role_cfg(ID,ROLE_ID,USER_ID) 
			SELECT SUBSTR(REPLACE(UUID(),'-','') FROM 1 FOR 32) AS ID,
			 r.ROLE_ID AS ROLE_ID,'$userId$' FROM t_sm_role r WHERE 
			 1=2 
			 <dynamic-field property="roleIds">
			 	OR r.ROLE_ID IN ($roleIds$)
			 </dynamic-field>
    </statement>
    
     <!-- 通过用户编号或用户姓名查询用户信息 -->
    <statement id="queryAllUser">
    	SELECT USER_ID,ORG_ID,NAME,CONT_EMAIL FROM T_SM_USER
    	where 1=1
    	<dynamic-field property="userId">
    		and USER_ID like CONCAT('%',#userId#,'%')
    	</dynamic-field>
    	<dynamic-field property="userName">
    		and NAME like CONCAT('%',#userName#,'%')
    	</dynamic-field>
    </statement>
    
     <!-- 获取角色编号集合之下是否存在子角色 -->
     <statement id="hasChildRoleByRoleIds">
	     SELECT COUNT(*) FROM T_SM_ROLE r WHERE 1=1
	     <dynamic-field property="roleIds">
			AND r.P_ROLE_ID IN ($roleIds$)
		</dynamic-field>
	</statement>
</ns:hibernate>